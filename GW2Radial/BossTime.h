#pragma once
#include <Main.h>
#include <Singleton.h>
#include <Keybind.h>
#include <Input.h>
#include <boost/thread.hpp>
#include <MumbleLink.h>

namespace GW2Radial
{
	class BossTime :public Singleton<BossTime>
	{

	public:
		BossTime();
		~BossTime();
		void Draw();
		//const Keybind& showKeybindweb() const { return showKeybindweb_; }
		bool gwps() const { return gudingwinpos_.value(); }
		void gwps(bool value) { return gudingwinpos_.value(value); }
		float sPOSX() const { return gudingwinpos_x.value(); }
		void sPOSX(float value) { return gudingwinpos_x.value(value); }
		float sPOSY() const { return gudingwinpos_y.value(); }
		void sPOSY(float value) { return gudingwinpos_y.value(value); }
		std::string SHOWNEWUI_BUTTONS_TYPE(int bosspaixuid, int show_TYPE, int h, int s);
		void SHOWNEWUI_BUTTONS_TYPE_V(int bosspaixuid, int show_TYPE, int h, int s);
		void TOOLSVIM(bool& showtoolwind);
		void SHOWNEWUI_BUTTONS();
		void SHOWNEWUI(bool& showit);
		void BAOJING(bool& showitbj);
		void cloossalltz();
		void showtimspot(float postto);
		void NEWBAOJING(bool& showitbj);
		void readalldo_W();
		void readalldo();
		bool _DoUI(bool& ison);

	protected:

		int BSPX1[97] = { 1,2,3,4,5,6,7,8,9,2,10,4,1,6,3,8,5,2,7,4,9,6,10,8,1,2,3,4,5,6,7,8,9,2,10,4,1,6,3,8,5,2,7,4,9,6,10,8,1,2,3,4,5,6,7,8,9,2,10,4,1,6,3,8,5,2,7,4,9,6,10,8,1,2,3,4,5,6,7,8,9,2,10,4,1,6,3,8,5,2,7,4,9,6,10,8,1};
		int BSPX2[97] = { 11,14,0,0,12,0,0,0,13,15,0,0,11,0,0,0,12,16,0,0,0,0,0,0,0,14,0,0,13,0,0,0,11,15,0,0,12,0,0,0,13,16,0,0,11,0,0,0,12,14,0,0,0,0,0,0,13,15,0,0,11,0,0,0,12,16,0,0,0,0,0,0,0,14,13,0,0,0,11,0,0,15,12,0,0,0,0,0,0,16,0,0,13,0,0,0,11};
		int BSPX3[97] = { 17,0,18,21,19,0,20,21,17,0,18,21,19,0,20,21,17,0,18,21,19,0,20,21,17,0,18,21,19,0,20,21,17,0,18,21,19,0,20,21,17,0,18,21,19,0,20,21,17,0,18,21,19,0,20,21,17,0,18,21,19,0,20,21,17,0,18,21,19,0,20,21,17,0,18,21,19,0,20,21,17,0,18,21,19,0,20,21,17,0,18,21,19,0,20,21,17};
		int BSPX4[97] = { 0,0,22,0,23,0,0,24,0,0,22,0,23,0,0,24,0,0,22,0,23,0,0,24,0,0,22,0,23,0,0,24,0,0,22,0,23,0,0,24,0,0,22,0,23,0,0,24,0,0,22,0,23,0,0,24,0,0,22,0,23,0,0,24,0,0,22,0,23,0,0,24,0,0,22,0,23,0,0,24,0,0,22,0,23,0,0,24,0,0,22,0,23,0,0,24,0};
		int BSPX5[97] = { 25,0,26,27,28,29,26,31,25,0,26,27,28,29,26,31,25,0,26,27,28,29,26,31,25,0,26,27,28,29,26,31,25,0,26,27,28,29,26,31,25,0,26,27,28,29,26,31,25,0,26,27,28,29,26,31,25,0,26,27,28,29,26,31,25,0,26,27,28,29,26,31,25,0,26,27,28,29,26,31,25,0,26,27,28,29,26,31,25,0,26,27,28,29,26,31,25};
		int BSPX6[97] = { 32,0,33,0,34,35,30,36,32,0,33,0,34,35,30,36,32,0,33,0,34,35,30,36,32,0,33,0,34,35,30,36,32,0,33,0,34,35,30,36,32,0,33,0,34,35,30,36,32,0,33,0,34,35,30,36,32,0,33,0,34,35,30,36,32,0,33,0,34,35,30,36,32,0,33,0,34,35,30,36,32,0,33,0,34,35,30,36,32,0,33,0,34,35,30,36,32};
		int BSPX7[97] = { 37,0,38,0,39,0,40,0,37,0,38,0,39,0,40,0,37,0,38,0,39,0,40,0,37,0,38,0,39,0,40,0,37,0,38,0,39,0,40,0,37,0,38,0,39,0,40,0,37,0,38,0,39,0,40,0,37,0,38,0,39,0,40,0,37,0,38,0,39,0,40,0,37,0,38,0,39,0,40,0,37,0,38,0,39,0,40,0,37,0,38,0,39,0,40,0,37};
		int BSPX8[97] = { 0,0,0,0,41,0,0,42,0,0,0,0,41,0,0,42,0,0,0,0,41,0,0,42,0,0,0,0,41,0,0,42,0,0,0,0,41,0,0,42,0,0,0,0,41,0,0,42,0,0,0,0,41,0,0,42,0,0,0,0,41,0,0,42,0,0,0,0,41,0,0,42,0,0,0,0,41,0,0,42,0,0,0,0,41,0,0,42,0,0,0,0,41,0,0,42,0 };
		int BSPX51[97] = { 0,0,0,0,29,0,0,0,0,0,0,0,29,0,0,0,0,0,0,0,29,0,0,0,0,0,0,0,29,0,0,0,0,0,0,0,29,0,0,0,0,0,0,0,29,0,0,0,0,0,0,0,29,0,0,0,0,0,0,0,29,0,0,0,0,0,0,0,29,0,0,0,0,0,0,0,29,0,0,0,0,0,0,0,29,0,0,0,0,0,0,0,29,0,0,0,0 };
		int BSPX52[97] = { 0,0,0,0,32,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,32,0,0,0,0 };
		int BSPX5x[97] = { 25,0,26,27,28,0,26,31,25,0,26,27,28,0,26,31,25,0,26,27,28,0,26,31,25,0,26,27,28,0,26,31,25,0,26,27,28,0,26,31,25,0,26,27,28,0,26,31,25,0,26,27,28,0,26,31,25,0,26,27,28,0,26,31,25,0,26,27,28,0,26,31,25,0,26,27,28,0,26,31,25,0,26,27,28,0,26,31,25,0,26,27,28,0,26,31,25 };

		//bossÃ·–—≈≈–Ú
		int ALL_boss_paixu[476][3] = { {0,0,0} ,{0,0,1},{0,0,11},	{0,0,32},	{0,5,25},	{0,10,17},	{0,10,37},	{0,15,2},	{0,20,14},	{0,30,3},
		{0,30,18},	{0,30,22},	{0,30,26},	{0,30,33},	{0,38,38},	{0,40,21},	{0,45,4},	{0,45,27},	{1,0,5},	{1,0,12},	{1,0,19},
		{1,0,23},	{1,0,28},	{1,0,29},	{1,0,32},	{1,0,34},	{1,5,39},	{1,5,41},	{1,15,6},	{1,15,35},	{1,30,7},	{1,30,20},
		{1,30,26},	{1,30,30},	{1,39,40},	{1,40,21},	{1,45,8},	{1,45,24},	{1,45,31},	{1,45,36},	{1,45,42},	{2,0,9},	{ 2,0,13 } , {2,0,32},
		{2,5,25},	{2,10,17},	{2,10,37},	{2,15,2},	{2,20,15},	{2,30,10},	{2,30,18},	{2,30,22},	{2,30,26},	{2,30,33},	{2,38,38},
		{2,40,21},	{2,45,4},	{2,45,27},	{3,0,1},	{3,0,11},	{3,0,19},	{3,0,23},	{3,0,28},	{3,0,29},	{3,0,32},	{3,0,34},
		{3,5,39},	{3,5,41},	{3,15,6},	{3,15,35},	{3,30,3},	{3,30,20},	{3,30,26},	{3,30,30},	{3,39,40},	{3,40,21},	{3,45,8},
		{3,45,24},	{3,45,31},	{3,45,36},	{3,45,42},	{4,0,5},	{4,0,12},	{4,0,32},	{4,5,25},	{4,10,17},	{4,10,37},	{4,15,2},
		{4,20,16},	{4,30,7},	{4,30,18},	{4,30,22},	{4,30,26},	{4,30,33},	{4,38,38},	{4,40,21},	{4,45,4},	{4,45,27},	{5,0,9},
		{5,0,12},	{5,0,19},	{5,0,23},	{5,0,28},	{5,0,29},	{5,0,32},	{5,0,34},	{5,5,39},	{5,5,41},	{5,15,6},	{5,15,35},
		{5,30,10},	{5,30,20},	{5,30,26},	{5,30,30},	{5,39,40},	{5,40,21},	{5,45,8},	{5,45,24},	{5,45,31},	{5,45,36},	{5,45,42},
		{6,0,1},	{6,0,32},	{6,5,25},	{6,10,17},	{6,10,37},	{6,15,2},	{6,20,14},	{6,30,3},	{6,30,18},	{6,30,22},	{6,30,26},
		{6,30,33},	{6,38,38},	{6,40,21},	{6,45,4},	{6,45,27},	{7,0,5},	{7,0,13},	{7,0,19},	{7,0,23},	{7,0,28},	{7,0,29},
		{7,0,32},	{7,0,34},	{7,5,39},	{7,5,41},	{7,15,6},	{7,15,35},	{7,30,7},	{7,30,20},	{7,30,26},	{7,30,30},	{7,39,40},
		{7,40,21},	{7,45,8},	{7,45,24},	{7,45,31},	{7,45,36},	{7,45,42},	{8,0,9},	{8,0,11},	{8,0,32},	{8,5,25},	{8,10,17},
		{8,10,37},	{8,15,2},	{8,20,15},	{8,30,10},	{8,30,18},	{8,30,22},	{8,30,26},	{8,30,33},	{8,38,38},	{8,40,21},	{8,45,4},
		{8,45,27},	{9,0,1},	{9,0,12},	{9,0,19},	{9,0,23},	{9,0,28},	{9,0,29},	{9,0,32},	{9,0,34},	{9,5,39},	{9,5,41},
		{9,15,6},	{9,15,35},	{9,30,3},	{9,30,20},	{9,30,26},	{9,30,30},	{9,39,40},	{9,40,21},	{9,45,8},	{9,45,24},	{9,45,31},
		{9,45,36},	{9,45,42},	{10,0,5},	{10,0,13},	{10,0,32},	{10,5,25},	{10,10,17},	{10,10,37},	{10,15,2},	{10,20,16},	{10,30,7},
		{10,30,18},	{10,30,22},	{10,30,26},	{10,30,33},	{10,38,38},	{10,40,21},	{10,45,4},	{10,45,27},	{11,0,9},	{11,0,11},	{11,0,19},
		{11,0,23},	{11,0,28},	{11,0,29},	{11,0,32},	{11,0,34},	{11,5,39},	{11,5,41},	{11,15,6},	{11,15,35},	{11,30,10},	{11,30,20},
		{11,30,26},	{11,30,30},	{11,39,40},	{11,40,21},	{11,45,8},	{11,45,24},	{11,45,31},	{11,45,36},	{11,45,42},	{12,0,1},	{12,0,12},
		{12,0,32},	{12,5,25},	{12,10,17},	{12,10,37},	{12,15,2},	{12,20,14},	{12,30,3},	{12,30,18},	{12,30,22},	{12,30,26},	{12,30,33},
		{12,38,38},	{12,40,21},	{12,45,4},	{12,45,27},	{13,0,5},	{13,0,19},	{13,0,23},	{13,0,28},	{13,0,29},	{13,0,32},	{13,0,34},
		{13,5,39},	{13,5,41},	{13,15,6},	{13,15,35},	{13,30,7},	{13,30,20},	{13,30,26},	{13,30,30},	{13,39,40},	{13,40,21},	{13,45,8},
		{13,45,24},	{13,45,31},	{13,45,36},	{13,45,42},	{14,0,9},	{14,0,13},	{14,0,32},	{14,5,25},	{14,10,17},	{14,10,37},	{14,15,2},
		{14,20,15},	{14,30,10},	{14,30,18},	{14,30,22},	{14,30,26},	{14,30,33},	{14,38,38},	{14,40,21},	{14,45,4},	{14,45,27},	{15,0,1},
		{15,0,11},	{15,0,19},	{15,0,23},	{15,0,28},	{15,0,29},	{15,0,32},	{15,0,34},	{15,5,39},	{15,5,41},	{15,15,6},	{15,15,35},
		{15,30,3},	{15,30,20},	{15,30,26},	{15,30,30},	{15,39,40},	{15,40,21},	{15,45,8},	{15,45,24},	{15,45,31},	{15,45,36},	{15,45,42},
		{16,0,5},	{16,0,12},	{16,0,32},	{16,5,25},	{16,10,17},	{16,10,37},	{16,15,2},	{16,20,16},	{16,30,7},	{16,30,18},	{16,30,22},
		{16,30,26},	{16,30,33},	{16,38,38},	{16,40,21},	{16,45,4},	{16,45,27},	{17,0,9},	{17,0,19},	{17,0,23},	{17,0,28},	{17,0,29},
		{17,0,32},	{17,0,34},	{17,5,39},	{17,5,41},	{17,15,6},	{17,15,35},	{17,30,10},	{17,30,20},	{17,30,26},	{17,30,30},	{17,39,40},
		{17,40,21},	{17,45,8},	{17,45,24},	{17,45,31},	{17,45,36},	{17,45,42},	{18,0,1},	{18,0,32},	{18,5,25},	{18,10,17},	{18,10,37},
		{18,15,2},	{18,20,14},	{18,30,3},	{18,30,13},	{18,30,18},	{18,30,22},	{18,30,26},	{18,30,33},	{18,38,38},	{18,40,21},	{18,45,4},
		{18,45,27},	{19,0,5},	{19,0,19},	{19,0,23},	{19,0,28},	{19,0,29},	{19,0,32},	{19,0,34},	{19,5,39},	{19,5,41},	{19,15,6},
		{19,15,35},	{19,30,7},	{19,30,11},	{19,30,20},	{19,30,26},	{19,30,30},	{19,39,40},	{19,40,21},	{19,45,8},	{19,45,24},	{19,45,31},
		{19,45,36},	{19,45,42},	{20,0,9},	{20,0,32},	{20,5,25},	{20,10,17},	{20,10,37},	{20,15,2},	{20,20,15},	{20,30,10},	{20,30,12},
		{20,30,18},	{20,30,22},	{20,30,26},	{20,30,33},	{20,38,38},	{20,40,21},	{20,45,4},	{20,45,27},	{21,0,1},	{21,0,19},	{21,0,23},
		{21,0,28},	{21,0,29},	{21,0,32},	{21,0,34},	{21,5,39},	{21,5,41},	{21,15,6},	{21,15,35},	{21,30,3},	{21,30,20},	{21,30,26},
		{21,30,30},	{21,39,40},	{21,40,21},	{21,45,8},	{21,45,24},	{21,45,31},	{21,45,36},	{21,45,42},	{22,0,5},	{22,0,32},	{22,5,25},
		{22,10,17},	{22,10,37},	{22,15,2},	{22,20,16},	{22,30,7},	{22,30,18},	{22,30,22},	{22,30,26},	{22,30,33},	{22,38,38},	{22,40,21},
		{22,45,4},	{22,45,27},	{23,0,9},	{23,0,13},	{23,0,19},	{23,0,23},	{23,0,28},	{23,0,29},	{23,0,32},	{23,0,34},	{23,5,39},
		{23,5,41},	{23,15,6},	{23,15,35},	{23,30,10},	{23,30,20},	{23,30,26},	{23,30,30},	{23,39,40},	{23,40,21},	{23,45,8},	{23,45,24},
		{23,45,31},	{23,45,36},	{23,45,42},
		};

		const char* BossName(int xuhao);
		const char* BossPost(int xuhao);

		void savealldo();

		void DELsonedo(int intmp_);

		void ADDsonedo(std::string intmp_);

		void DayToDo();

		void Button_showit(int bosspaixuid, int showsidh, int showsidL, int h, int s);

		float daxiao_ =1.0f;
		float daxiao2_ = 1.0f;
		float touming_ =0.44f;
		int kput = 0;
		float scroll_x = 0;
		bool isVisibleweb_ = false;
		//Keybind showKeybindweb_;

		IDirect3DTexture9* Texture_1 = nullptr;
		IDirect3DTexture9* Texture_2 = nullptr;
		IDirect3DTexture9* Texture_3 = nullptr;

		IDirect3DTexture9* Texture_add = nullptr;
		IDirect3DTexture9* Texture_cancel = nullptr;
		IDirect3DTexture9* Texture_close = nullptr;
		IDirect3DTexture9* Texture_edit = nullptr;
		IDirect3DTexture9* Texture_recovery = nullptr;
		IDirect3DTexture9* Texture_remove = nullptr;
		IDirect3DTexture9* Texture_delete = nullptr;
		IDirect3DTexture9* Texture_NWBGDDS = nullptr;

		ConfigurationOption<bool> gudingwinpos_;
		ConfigurationOption<float> gudingwinpos_x;
		ConfigurationOption<float> gudingwinpos_y;
		//ConfigurationOption<const char*> isnewday_;
		int days = 0;
		bool ghen = false;

		bool jishiqi = true;
		Input::InputChangeCallback inputChangeCallbackweb_;
		InputResponse OnInputChangeweb(bool changed, const std::set<uint>& keys, const std::list<EventKey>& changedKeys);



	};
}






